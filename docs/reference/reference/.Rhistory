n <- dim(X)[0]*dim(X)[1]
k <- dim(X)[1]
mse <- sse(X) / (n-k)
return (mse)
}
fstat <- function(X) {
mst <- mst(X)
mse <- mse(X)
return (mst / mse)
}
testanova <- function(X) {
}
testdata <- t(data.frame(c(65.0, 75.0, 59.0, 94.0),
c(87.0, 69.0, 78.0, 89.0),
c(73.0, 83.0, 67.0, 80.0),
c(79.0, 81.0, 62.0, 88.0),
c(81.0, 72.0, 83.0, 0.0),
c(69.0, 79.0, 76.0, 0.0),
c(0.0, 90.0, 0.0, 0.0)))
sst(testdata)
testdata
testdata
testdata[,1]
testdata[1,0]
testdata[1,]
testdata[,1]
## test anova using same method as implementation
# X parameter is a data frame.
cm <- function(X) {
size <- dim(X)[0]&dim(X)[1]
total <- sum(X)
cm <- (1/size)*total
return (cm)
}
totalSS <- function(X) {
data <- X^2
totalSS <- sum(data) - cm()
return (totalSS)
}
sst <- function(X) {
cols <- c(1:dim(X)[1])
data <- lapply(cols,
function(i) {
C <- X[,i]
ni <- length(C)
total <- sum( C^2 / ni )
return (total)
})
total <- sum(unlist(data))
sst <- total - cm()
return (sst)
}
sse <- function(X) {
sse <- totalSS(X) - sst(X)
return (sse)
}
mst <- function(X) {
k <- dim(X)[1]
mst <- sst(X) / (k-1)
return (mst)
}
mse <- function(X) {
n <- dim(X)[0]*dim(X)[1]
k <- dim(X)[1]
mse <- sse(X) / (n-k)
return (mse)
}
fstat <- function(X) {
mst <- mst(X)
mse <- mse(X)
return (mst / mse)
}
testanova <- function(X) {
}
testdata <- t(data.frame(c(65.0, 75.0, 59.0, 94.0),
c(87.0, 69.0, 78.0, 89.0),
c(73.0, 83.0, 67.0, 80.0),
c(79.0, 81.0, 62.0, 88.0),
c(81.0, 72.0, 83.0, 0.0),
c(69.0, 79.0, 76.0, 0.0),
c(0.0, 90.0, 0.0, 0.0)))
sst(testdata)
## test anova using same method as implementation
# X parameter is a data frame.
cm <- function(X) {
size <- dim(X)[0]&dim(X)[1]
total <- sum(X)
cm <- (1/size)*total
return (cm)
}
totalSS <- function(X) {
data <- X^2
totalSS <- sum(data) - cm()
return (totalSS)
}
sst <- function(X) {
cols <- c(1:dim(X)[1])
data <- lapply(cols,
function(i) {
C <- X[,i]
ni <- length(C)
total <- sum( C^2 / ni )
return (total)
})
total <- sum(unlist(data))
sst <- total - cm()
return (sst)
}
sse <- function(X) {
sse <- totalSS(X) - sst(X)
return (sse)
}
mst <- function(X) {
k <- dim(X)[1]
mst <- sst(X) / (k-1)
return (mst)
}
mse <- function(X) {
n <- dim(X)[0]*dim(X)[1]
k <- dim(X)[1]
mse <- sse(X) / (n-k)
return (mse)
}
fstat <- function(X) {
mst <- mst(X)
mse <- mse(X)
return (mst / mse)
}
testanova <- function(X) {
}
X <- t(data.frame(c(65.0, 75.0, 59.0, 94.0),
c(87.0, 69.0, 78.0, 89.0),
c(73.0, 83.0, 67.0, 80.0),
c(79.0, 81.0, 62.0, 88.0),
c(81.0, 72.0, 83.0, 0.0),
c(69.0, 79.0, 76.0, 0.0),
c(0.0, 90.0, 0.0, 0.0)))
sst(X)
sst(testdata)
## test anova using same method as implementation
# X parameter is a data frame.
cm <- function(X) {
size <- dim(X)[0]&dim(X)[1]
total <- sum(X)
cm <- (1/size)*total
return (cm)
}
totalSS <- function(X) {
data <- X^2
totalSS <- sum(data) - cm()
return (totalSS)
}
sst <- function(X) {
cols <- c(1:dim(X)[1])
data <- lapply(cols,
function(i) {
print(i)
print(X)
C <- X[,i]
ni <- length(C)
total <- sum( C^2 / ni )
return (total)
})
total <- sum(unlist(data))
sst <- total - cm()
return (sst)
}
sse <- function(X) {
sse <- totalSS(X) - sst(X)
return (sse)
}
mst <- function(X) {
k <- dim(X)[1]
mst <- sst(X) / (k-1)
return (mst)
}
mse <- function(X) {
n <- dim(X)[0]*dim(X)[1]
k <- dim(X)[1]
mse <- sse(X) / (n-k)
return (mse)
}
fstat <- function(X) {
mst <- mst(X)
mse <- mse(X)
return (mst / mse)
}
testanova <- function(X) {
}
X <- t(data.frame(c(65.0, 75.0, 59.0, 94.0),
c(87.0, 69.0, 78.0, 89.0),
c(73.0, 83.0, 67.0, 80.0),
c(79.0, 81.0, 62.0, 88.0),
c(81.0, 72.0, 83.0, 0.0),
c(69.0, 79.0, 76.0, 0.0),
c(0.0, 90.0, 0.0, 0.0)))
sst(X)
X[,5]
X[,4]
dim(X)
## test anova using same method as implementation
# X parameter is a data frame.
cm <- function(X) {
size <- dim(X)[1]*dim(X)[2]
total <- sum(X)
cm <- (1/size)*total
return (cm)
}
totalSS <- function(X) {
data <- X^2
totalSS <- sum(data) - cm()
return (totalSS)
}
sst <- function(X) {
cols <- c(1:dim(X)[2])
data <- lapply(cols,
function(i) {
print(i)
print(X)
C <- X[,i]
ni <- length(C)
total <- sum( C^2 / ni )
return (total)
})
total <- sum(unlist(data))
sst <- total - cm()
return (sst)
}
sse <- function(X) {
sse <- totalSS(X) - sst(X)
return (sse)
}
mst <- function(X) {
k <- dim(X)[2]
mst <- sst(X) / (k-1)
return (mst)
}
mse <- function(X) {
n <- dim(X)[1]*dim(X)[2]
k <- dim(X)[2]
mse <- sse(X) / (n-k)
return (mse)
}
fstat <- function(X) {
mst <- mst(X)
mse <- mse(X)
return (mst / mse)
}
testanova <- function(X) {
}
X <- t(data.frame(c(65.0, 75.0, 59.0, 94.0),
c(87.0, 69.0, 78.0, 89.0),
c(73.0, 83.0, 67.0, 80.0),
c(79.0, 81.0, 62.0, 88.0),
c(81.0, 72.0, 83.0, 0.0),
c(69.0, 79.0, 76.0, 0.0),
c(0.0, 90.0, 0.0, 0.0)))
sst(X)
sst <- sst(X)
sst
sst1 <- sst(X)
sst1
## test anova using same method as implementation
# X parameter is a data frame.
cm <- function(X) {
size <- dim(X)[1]*dim(X)[2]
total <- sum(X)
cm <- (1/size)*total
return (cm)
}
totalSS <- function(X) {
data <- X^2
totalSS <- sum(data) - cm()
return (totalSS)
}
sst <- function(X) {
cols <- c(1:dim(X)[2])
data <- lapply(cols,
function(i) {
C <- X[,i]
ni <- length(C)
total <- sum( C^2 / ni )
return (total)
})
print(data)
total <- sum(unlist(data))
sst <- total - cm()
return (sst)
}
sse <- function(X) {
sse <- totalSS(X) - sst(X)
return (sse)
}
mst <- function(X) {
k <- dim(X)[2]
mst <- sst(X) / (k-1)
return (mst)
}
mse <- function(X) {
n <- dim(X)[1]*dim(X)[2]
k <- dim(X)[2]
mse <- sse(X) / (n-k)
return (mse)
}
fstat <- function(X) {
mst <- mst(X)
mse <- mse(X)
return (mst / mse)
}
testanova <- function(X) {
}
X <- t(data.frame(c(65.0, 75.0, 59.0, 94.0),
c(87.0, 69.0, 78.0, 89.0),
c(73.0, 83.0, 67.0, 80.0),
c(79.0, 81.0, 62.0, 88.0),
c(81.0, 72.0, 83.0, 0.0),
c(69.0, 79.0, 76.0, 0.0),
c(0.0, 90.0, 0.0, 0.0)))
sst(X)
## test anova using same method as implementation
# X parameter is a data frame.
cm <- function(X) {
size <- dim(X)[1]*dim(X)[2]
total <- sum(X)
cm <- (1/size)*total
return (cm)
}
totalSS <- function(X) {
data <- X^2
totalSS <- sum(data) - cm()
return (totalSS)
}
sst <- function(X) {
cols <- c(1:dim(X)[2])
data <- lapply(cols,
function(i) {
C <- X[,i]
ni <- length(C)
total <- sum( C^2 / ni )
return (total)
})
total <- sum(unlist(data))
print(total)
sst1 <- total - cm()
return (sst1)
}
sse <- function(X) {
sse <- totalSS(X) - sst(X)
return (sse)
}
mst <- function(X) {
k <- dim(X)[2]
mst <- sst(X) / (k-1)
return (mst)
}
mse <- function(X) {
n <- dim(X)[1]*dim(X)[2]
k <- dim(X)[2]
mse <- sse(X) / (n-k)
return (mse)
}
fstat <- function(X) {
mst <- mst(X)
mse <- mse(X)
return (mst / mse)
}
testanova <- function(X) {
}
X <- t(data.frame(c(65.0, 75.0, 59.0, 94.0),
c(87.0, 69.0, 78.0, 89.0),
c(73.0, 83.0, 67.0, 80.0),
c(79.0, 81.0, 62.0, 88.0),
c(81.0, 72.0, 83.0, 0.0),
c(69.0, 79.0, 76.0, 0.0),
c(0.0, 90.0, 0.0, 0.0)))
sst(X)
## test anova using same method as implementation
# X parameter is a data frame.
cm <- function(X) {
size <- dim(X)[1]*dim(X)[2]
total <- sum(X)
cm1 <- (1/size)*total
return (cm1)
}
totalSS <- function(X) {
data <- X^2
totalSS1 <- sum(data) - cm()
return (totalSS1)
}
sst <- function(X) {
cols <- c(1:dim(X)[2])
data <- lapply(cols,
function(i) {
C <- X[,i]
ni <- length(C)
total <- sum( C^2 / ni )
return (total)
})
total <- sum(unlist(data))
sst1 <- total - cm()
return (sst1)
}
sse <- function(X) {
sse1 <- totalSS(X) - sst(X)
return (sse1)
}
mst <- function(X) {
k <- dim(X)[2]
mst1 <- sst(X) / (k-1)
return (mst1)
}
mse <- function(X) {
n <- dim(X)[1]*dim(X)[2]
k <- dim(X)[2]
mse1 <- sse(X) / (n-k)
return (mse1)
}
fstat <- function(X) {
mst1 <- mst(X)
mse1 <- mse(X)
return (mst1 / mse1)
}
testanova <- function(X) {
totalSS1 <- totalSS(X)
sst1 <- sst(X)
sse1 <- sse(X)
mst1 <- mst(X)
mse1 <- mse(X)
f1 <- fstat(X)
print(paste("Total SS", totalSS1))
print(paste("SST", sst1))
print(paste("SSE", sse1))
print(paste("MST", mst1))
print(paste("MSE", mse1))
print(paste("F-stat", f1))
}
X <- t(data.frame(c(65.0, 75.0, 59.0, 94.0),
c(87.0, 69.0, 78.0, 89.0),
c(73.0, 83.0, 67.0, 80.0),
c(79.0, 81.0, 62.0, 88.0),
c(81.0, 72.0, 83.0, 0.0),
c(69.0, 79.0, 76.0, 0.0),
c(0.0, 90.0, 0.0, 0.0)))
testanova(X)
## test anova using same method as implementation
# X parameter is a data frame.
cm <- function(X) {
size <- dim(X)[1]*dim(X)[2]
total <- sum(X)
cm1 <- (1/size)*total
return (cm1)
}
totalSS <- function(X) {
data <- X^2
totalSS1 <- sum(data) - cm(X)
return (totalSS1)
}
sst <- function(X) {
cols <- c(1:dim(X)[2])
data <- lapply(cols,
function(i) {
C <- X[,i]
ni <- length(C)
total <- sum( C^2 / ni )
return (total)
})
total <- sum(unlist(data))
sst1 <- total - cm(X)
return (sst1)
}
sse <- function(X) {
sse1 <- totalSS(X) - sst(X)
return (sse1)
}
mst <- function(X) {
k <- dim(X)[2]
mst1 <- sst(X) / (k-1)
return (mst1)
}
mse <- function(X) {
n <- dim(X)[1]*dim(X)[2]
k <- dim(X)[2]
mse1 <- sse(X) / (n-k)
return (mse1)
}
fstat <- function(X) {
mst1 <- mst(X)
mse1 <- mse(X)
return (mst1 / mse1)
}
testanova <- function(X) {
totalSS1 <- totalSS(X)
sst1 <- sst(X)
sse1 <- sse(X)
mst1 <- mst(X)
mse1 <- mse(X)
f1 <- fstat(X)
print(paste("Total SS", totalSS1))
print(paste("SST", sst1))
print(paste("SSE", sse1))
print(paste("MST", mst1))
print(paste("MSE", mse1))
print(paste("F-stat", f1))
}
X <- t(data.frame(c(65.0, 75.0, 59.0, 94.0),
c(87.0, 69.0, 78.0, 89.0),
c(73.0, 83.0, 67.0, 80.0),
c(79.0, 81.0, 62.0, 88.0),
c(81.0, 72.0, 83.0, 0.0),
c(69.0, 79.0, 76.0, 0.0),
c(0.0, 90.0, 0.0, 0.0)))
testanova(X)
