plot(test1)
data%*%t(data)
t(data)%*%data
M <- as.matrix(data[,2:ncols(data)])
M <- as.matrix(data[,2:ncol(data)])
M
M%*%t(M)
M <- as.matrix(data[,2:ncol(data)])
t1 <- M%*%t(M)
t2 <- t(M)%*%M
t1 == t2
dim(t1)
dim(t2)
dim(data)
t1 <- t(M)%*%M
pinv(t1)
e <- eigen(t1)
e
plot(e)
plot(e$values)
data <- read.csv("../../../data/test_mandible_data.csv", header=TRUE)
str(data)
attach(data)
Y <- cbind(X1,X2,X3,X4,X5,X6,X7,X8,X9)
data.manova <- manova(Y ~ as.factor(Group), data=data)
data.manova
plot(data.manova)
summary(data.manova, test="Pillais")
summary(data.manova, test="Pillai")
summary(data.manova, test="Wilks")
summary(data.manova, test="Roy")
summary(data.manova, test="Hotelling-Lawley")
alpha <- 0.05
## Summarise as pillais test
(s1 <- summary(mf.manova1))
mf <- data
mf.manova1 <- data.manova
alpha <- 0.05
## Summarise as pillais test
(s1 <- summary(mf.manova1))
test1 <- s1$stats
test1.F <- test1[1,3]
test1.df1 <- test1[1,4]
test1.df2 <- test1[1,5]
test1.p <- test1[1,6]
test1.reject <- test1.p < alpha
## Summarise as wilks test
(s2 <- summary(mf.manova1, test="Wilks"))
test2 <- as.matrix(s2$stats)
test2.F <- test2[1,3]
test2.df1 <- test2[1,4]
test2.df2 <- test2[1,5]
test2.p <- test2[1,6]
test2.reject <- test2.p < alpha
## Summarise as Roys test
(s3 <- summary(mf.manova1, test="Roy"))
test3 <- as.matrix(s3$stats)
test3.F <- test3[1,3]
test3.df1 <- test3[1,4]
test3.df2 <- test3[1,5]
test3.p <- test3[1,6]
test3.reject <- test3.p < alpha
### Summarise as Lawes Hotellings trace
(s4 <- summary(mf.manova1, test="Hotelling-Lawley"))
test4 <- as.matrix(s4$stats)
test4.F <- test4[1,3]
test4.df1 <- test4[1,4]
test4.df2 <- test4[1,5]
test4.p <- test4[1,6]
test4.reject <- test4.p < alpha
## the test results
print("Rejection of Null Hypothesis for equal means between groups")
(results <- c(test1.reject,
test2.reject,
test3.reject,
test4.reject))
test4
test4.F
test4.p
s4
head(datya)
head(data)
s1
nrow(data)
s2
data.manova
names(data.manova)
data.manova$coefficients
data.manova$contrasts
data.manova$qr
s2
s2$Eigenvalues
mf <- data
mf.manova1 <- data.manova
alpha <- 0.05
## Summarise as pillais test
(s1 <- summary(mf.manova1))
test1 <- s1$stats
test1.F <- test1[1,3]
test1.df1 <- test1[1,4]
test1.df2 <- test1[1,5]
test1.p <- test1[1,6]
test1.reject <- test1.p < alpha
## Summarise as wilks test
(s2 <- summary(mf.manova1, test="Wilks"))
test2 <- as.matrix(s2$stats)
test2.F <- test2[1,3]
test2.df1 <- test2[1,4]
test2.df2 <- test2[1,5]
test2.p <- test2[1,6]
test2.reject <- test2.p < alpha
## Summarise as Roys test
(s3 <- summary(mf.manova1, test="Roy"))
test3 <- as.matrix(s3$stats)
test3.F <- test3[1,3]
test3.df1 <- test3[1,4]
test3.df2 <- test3[1,5]
test3.p <- test3[1,6]
test3.reject <- test3.p < alpha
### Summarise as Lawes Hotellings trace
(s4 <- summary(mf.manova1, test="Hotelling-Lawley"))
test4 <- as.matrix(s4$stats)
test4.F <- test4[1,3]
test4.df1 <- test4[1,4]
test4.df2 <- test4[1,5]
test4.p <- test4[1,6]
test4.reject <- test4.p < alpha
## the test results
print("Rejection of Null Hypothesis for equal means between groups")
(results <- c(test1.reject,
test2.reject,
test3.reject,
test4.reject))
ev2 <- s2$Eigenvalues
wtest <- sum ( sapply(ev2, function(e) 1 / (1+e) ) )
wtest
s2
ev2 <- s2$Eigenvalues
wtest <- prod ( sapply(ev2, function(e) 1 / (1+e) ) )
wtest
ev2
(ev2 <- s2$Eigenvalues)
# approximate wilks statistic
(wtest <- prod ( sapply(ev2, function(e) 1 / (1+e) ) ) )
mu1 <- aggregate(. ~ Group, data = mf[2:11], mean)
mu1
mu1 <- aggregate(. ~ Group, data = mf[2:11], mean)
cnts <- aggregate(. ~ Group data = mf[2:11], nrow)
mu1 <- aggregate(. ~ Group, data = mf[2:11], mean)
cnts <- aggregate(. ~ Group data = mf[2:11], count)
cnts
mu1 <- aggregate(. ~ Group, data = mf[2:11], mean)
cnts <- aggregate(. ~ Group data = mf[2:11], nrow)
require(dplr)
mu1 <- aggregate(. ~ Group, data = mf[2:11], mean)
cnts <- data %>% count(Group)
require(dplr)
require(tidyr)
mu1 <- aggregate(. ~ Group, data = mf[2:11], mean)
cnts <- data %>% count(Group)
require(dplr)
require(tidyr)
mu1 <- aggregate(. ~ Group, data = mf[2:11], mean)
cnts <- data %>% count_by(Group)
require(dplr)
require(tidyr)
mu1 <- aggregate(. ~ Group, data = mf[2:11], mean)
cnts <- data %>% group_by(Group) %>% summarise(cnt=n)
require(dplr)
require(tidyr)
mu1 <- aggregate(. ~ Group, data = mf[2:11], mean)
cnts <- data %>%
group_by(Group) %>%
summarise(count=n())
require(dplyr)
require(tidyr)
mu1 <- aggregate(. ~ Group, data = mf[2:11], mean)
cnts <- data %>%
group_by(Group) %>%
summarise(count=n())
cnts
require(dplyr)
require(tidyr)
mu1 <- aggregate(. ~ Group, data = mf[2:11], mean)
cnts <- data %>%
group_by(Group) %>%
summarise(count=n())
cnt <- data.frame(cnts)
cnt
t(mu1)%*%mu1
mu1
names(mu1)
require(dplyr)
require(tidyr)
mu1 <- aggregate(. ~ Group, data = mf[2:11], mean)
Gmu <- as.matrix(mu1[,2:10])
cnts <- data %>%
group_by(Group) %>%
summarise(count=n())
cnt <- data.frame(cnts)
t(Gmu)%*%Gmu
require(dplyr)
require(tidyr)
mu1 <- aggregate(. ~ Group, data = mf[2:11], mean)
Gmu <- as.matrix(mu1[,2:10])
cnts <- data %>%
group_by(Group) %>%
summarise(count=n())
cnt <- data.frame(cnts)
cnt <- as.matrix(cnts[,2])
B <- cnt%*%t(Gmu)%*%Gmu
cnt
require(dplyr)
require(tidyr)
mu1 <- aggregate(. ~ Group, data = mf[2:11], mean)
Gmu <- as.matrix(mu1[,2:10])
cnts <- data %>%
group_by(Group) %>%
summarise(count=n())
cnt <- data.frame(cnts)
cnt <- as.matrix(cnts[,2])
B <- t(cnt)%*%t(Gmu)%*%Gmu
B
cnt
require(dplyr)
require(tidyr)
mu1 <- aggregate(. ~ Group, data = mf[2:11], mean)
Gmu <- as.matrix(mu1[,2:10])
cnts <- data %>%
group_by(Group) %>%
summarise(count=n())
cnt <- data.frame(cnts)
cnt <- as.matrix(cnts[,2])
B <- t(cnt)%*%( t(Gmu)%*%Gmu )
require(dplyr)
require(tidyr)
mu1 <- aggregate(. ~ Group, data = mf[2:11], mean)
Gmu <- as.matrix(mu1[,2:10])
cnts <- data %>%
group_by(Group) %>%
summarise(count=n())
cnt <- data.frame(cnts)
cnt <- as.matrix(cnts[,2])
B <- cnt%*%( t(Gmu)%*%Gmu )
cnt
dim(Gmu)
t(cnt)%*%t(Gmu)
cnt%*%t(Gmu)
temp <- t(Gmu)%*%Gmu
dim(temp)
cnt%*% temp
t(cnt)%*% temp
temp %*% cnt
temp %*% t(cnt)
cnt
dim(temp)
dim(Gmu)
cnt %*% Gmu
dim(cnt) %*% Gmu
t(cnt) %*% Gmu
t(cnt) %*% Gmu %*% t(Gmu)
t(cnt) %*% Gmu %*% (Gmu)
mu1
colMeans(mf[,2:11])
colMeans(mf[,2:10])
colMeans(mf[,3:10])
eigen(mf[,3:10])
# look at the column means
sMu <- colMeans(mf[,3:10])
SS <- apply(1:nrow(Gmu), 1, function(i) {
Gmu[i,] <- Gmu[i,] - sMu
})
SS <- Gmu
for(i <- 1:nrow(Gmu) {
SS <- Gmu
for(i in 1:nrow(Gmu) {
SS <- Gmu
for(i in 1:nrow(Gmu)) {
SS[i,] <- Gmu[i,] - sMu
}
sMu
Gmu[1,]
# look at the column means
sMu <- colMeans(mf[,3:11])
SS <- Gmu
for(i in 1:nrow(Gmu)) {
SS[i,] <- Gmu[i,] - sMu
}
SS
cntSS <- SS
for(i in 1:nrow(SS)) {
cntSS[i,] <- cnt[i]*SS[i,]
}
B <- t(cntSS)%*%SS
B
s3
s4
df(0.05,36,268)
df(1-0.05,36,268)
df(0.05,36,268,lower.tail=FALSE)
df(0.05,36,268)
df(1-0.05,36,268)
df(1-0.05,36,241)
qf(0.0021936, 36,241)
df(0.05,36,241)
df(1-0.05,36,241)
qf(28, 36,241)
df(28, 36,241)
df(28, 36,241)
qf(1-0.05,36,241)
t <- 219.49418726872798
t / (1-t)
data <- read.csv("../../../data/test_mandible_data.csv", header=TRUE)
str(data)
attach(data)
Y <- cbind(X1,X2,X3,X4,X5,X6,X7,X8,X9)
data.manova <- manova(Y ~ as.factor(Group), data=data)
summary(data.manova, test="Pillai")
summary(data.manova, test="Wilks")
summary(data.manova, test="Roy")
summary(data.manova, test="Hotelling-Lawley")
mf <- data
mf.manova1 <- data.manova
alpha <- 0.05
## Summarise as pillais test
(s1 <- summary(mf.manova1))
test1 <- s1$stats
test1.F <- test1[1,3]
test1.df1 <- test1[1,4]
test1.df2 <- test1[1,5]
test1.p <- test1[1,6]
test1.reject <- test1.p < alpha
## Summarise as wilks test
(s2 <- summary(mf.manova1, test="Wilks"))
test2 <- as.matrix(s2$stats)
test2.F <- test2[1,3]
test2.df1 <- test2[1,4]
test2.df2 <- test2[1,5]
test2.p <- test2[1,6]
test2.reject <- test2.p < alpha
## Summarise as Roys test
(s3 <- summary(mf.manova1, test="Roy"))
test3 <- as.matrix(s3$stats)
test3.F <- test3[1,3]
test3.df1 <- test3[1,4]
test3.df2 <- test3[1,5]
test3.p <- test3[1,6]
test3.reject <- test3.p < alpha
### Summarise as Lawes Hotellings trace
(s4 <- summary(mf.manova1, test="Hotelling-Lawley"))
test4 <- as.matrix(s4$stats)
test4.F <- test4[1,3]
test4.df1 <- test4[1,4]
test4.df2 <- test4[1,5]
test4.p <- test4[1,6]
test4.reject <- test4.p < alpha
## the test results
print("Rejection of Null Hypothesis for equal means between groups")
(results <- c(test1.reject,
test2.reject,
test3.reject,
test4.reject))
(ev2 <- s2$Eigenvalues)
# approximate wilks statistic
(wtest <- prod ( sapply(ev2, function(e) 1 / (1+e) ) ) )
require(dplyr)
require(tidyr)
mu1 <- aggregate(. ~ Group, data = mf[2:11], mean)
Gmu <- as.matrix(mu1[,2:10])
cnts <- data %>%
group_by(Group) %>%
summarise(count=n())
cnt <- data.frame(cnts)
cnt <- as.matrix(cnts[,2])
# look at the column means
sMu <- colMeans(mf[,3:11])
SS <- Gmu
for(i in 1:nrow(Gmu)) {
SS[i,] <- Gmu[i,] - sMu
}
## Between group variation.
cntSS <- SS
for(i in 1:nrow(SS)) {
cntSS[i,] <- cnt[i]*SS[i,]
}
B <- t(cntSS)%*%SS
## Total variation.
sp <-read.table("../../../data/sparrow2.txt", header=TRUE)
sp
attach(sp)
myvars <- c("Bird", "Length", "Survival")
spsubset<-sp[myvars]
spsubset
str(sp)
boxplot(Length~Survival, xlab="Survival", ylab="Length (mm)")
tapply(sp$Length, sp$Survival, summary)
tapply(sp$Length, sp$Survival, mean)
tapply(sp$Length, sp$Survival, var)
#subset groupa
survival1<-subset(sp, Survival<=1, select=Length:Sternum )
survival2<-subset(sp, Survival>=2, select=Length:Sternum )
#calculate t-test from formula for length by survival
(mean1<- mean(survival1$Length))
(n1<-nrow(survival1))
(var1<-var(survival1$Length))
(mean2<- mean(survival2$Length))
(n2<-nrow(survival2))
(var2<-var(survival2$Length))
#pooled variance
(var={(n1-1)*var1 + (n2-1)*var2}/(n1+n2-2))
#t-test
(t=(mean1-mean2)/{sqrt(var*(1/n1+1/n2))})
#in R t values are one tailed so use 0.025
(tcrit=qt(0.025,47, lower.tail=FALSE) )
#in R t probabilities are one tailed so *2
(tprob=pt(-0.993,47, lower.tail=TRUE) *2)
#or the easy way
t.test(Length~Survival, var.equal = TRUE)
#calculate Hotellings'T^2 multivariate statistic
#create vectors of means and covariance matrices for survivor (1) and non-survivor (2) groups
(xbar1<- colMeans(survival1))
(C1<-cov(survival1))
(n1<-nrow(survival1))
(xbar2<- colMeans(survival2))
(C2<-cov(survival2))
(n2<-nrow(survival2))
#pooled covariance matrix
(C={(n1-1)*C1 + (n2-1)*C2}/(n1+n2-2))
(Cinv=solve(C))
#check: C*Cinv=identity
round(Cinv %*% C)
#calculate T^2
(T=((n1*n2)*(t(xbar1-xbar2))%*% Cinv %*% (xbar1-xbar2))/(n1+n2))
#equivalent F where p=5
(F=(n1+n2-5-1)* T/{(n1+n2-2)*5})
(Fcrit=qf(0.05,5,43, lower.tail=FALSE) )
(Fprob=pf(0.517,5,43, lower.tail=FALSE) )
library(DescTools)
(result <- HotellingsT2Test(cbind(Length, Extent, Head , Humerus, Sternum) ~ Survival))
names(result)
result$p.value
result$alternative
result$statistic
install.packages("mvtnorm")
install.packages("DescTools")
install.packages("DescTools")
#or the easy way
library(DescTools)
(result <- HotellingsT2Test(cbind(Length, Extent, Head , Humerus, Sternum) ~ Survival))
names(result)
result$p.value
result$alternative
result$statistic
install.packages("DescTools")
library(DescTools)
(result <- HotellingsT2Test(cbind(Length, Extent, Head , Humerus, Sternum) ~ Survival))
(mean<- mean(sp$Length))
(T_Length<-sum((Length-mean)^2))
# Within SS
#remember:(mean1<- mean(survival1$Length)) AND meann2<- mean(survival2$Length))
(W_Length<-(sum((survival1$Length-mean1)^2))+(sum((survival2$Length-mean2)^2)))
(mean<- mean(sp$Length))
(T_Length<-sum((Length-mean)^2))
# Within SS
#remember:(mean1<- mean(survival1$Length)) AND meann2<- mean(survival2$Length))
(W_Length<-(sum((survival1$Length-mean1)^2))+(sum((survival2$Length-mean2)^2)))
# Between SS
(B_Length<-T_Length-W_Length)
##check
(sp.anova<-anova(lm(Length~Survival)))
sp
X <- as.matrix(sp[,c("Length",Extent","Humerus", "Sternum")]
X <- as.matrix(sp[,c("Length","Extent","Humerus", "Sternum")]
)
X
attach(sp)
names(sp)
sp.manova <- manova(X ~ as.factor(Survival))
summary(sp.manova, test"Pillais")
summary(sp.manova, test="Pillais")
summary(sp.manova, test="Pillai")
summary(sp.manova, test="Roy")
summary(sp.manova, test="Hotelling-Lawley")
summary(sp.manova, test="Wilks")
write.csv(sp, "../../../data/test_sparrows.csv", row.names=FALSE)
summary(sp.manova, test="Pillai")
summary(sp.manova, test="Wilks")
summary(sp.manova, test="Roy")
summary(sp.manova, test="Hotelling-Lawley")
X <- as.matrix(sp[,c("Length","Extent","Head", "Humerus", "Sternum")])
sp.manova <- manova(X ~ as.factor(Survival))
summary(sp.manova, test="Pillai")
summary(sp.manova, test="Wilks")
summary(sp.manova, test="Roy")
summary(sp.manova, test="Hotelling-Lawley")
attach(sp)
X <- as.matrix(sp[,c("Length","Extent","Head", "Humerus", "Sternum")])
sp.manova <- manova(X ~ as.factor(Survival))
summary(sp.manova, test="Pillai")
summary(sp.manova, test="Wilks")
summary(sp.manova, test="Roy")
summary(sp.manova, test="Hotelling-Lawley")
sp.manova$Eigenvalues
m <- summary(sp.manova, test="Wilks")
m$Eigenvalues
X
m$Eigenvalues
summary(sp.manova, test="Pillai")
summary(sp.manova, test="Wilks")
summary(sp.manova, test="Roy")
summary(sp.manova, test="Hotelling-Lawley")
m$Eigenvalues
