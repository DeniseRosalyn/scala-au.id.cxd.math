colnames(cor) <- c("Z1","Z2","Z3","Z4")
rownames(cor) <- c("MB", "BH", "BL", "NH")
require(corrplot)
corrplot(cor)
zMat <- as.matrix(read.csv("../temp/z.csv", header=FALSE))
varExplained <- c(t(read.csv("../temp/varianceExplained.csv", header=FALSE)))
cor <-as.matrix(read.csv("../temp/correlation.csv", header=FALSE))
yProjection <- as.matrix(read.csv("../temp/varianceExplained.csv", header=FALSE))
yNames <- c(t(read.csv("../temp/yNames.csv", header=FALSE)))
eraNum <- 1:4
eraLabels <- c("Dyn.12.13","Early.P","Late.P","Ptolemic","Roman")
plot(zMat[,1],zMat[,2], type="n", xlab="Z2", ylab="Z1")
text(zMat[,1],zMat[,2], labels=eraLabels, col=eraNum, cex=0.6)
zMat <- as.matrix(read.csv("../temp/z.csv", header=FALSE))
varExplained <- c(t(read.csv("../temp/varianceExplained.csv", header=FALSE)))
cor <-as.matrix(read.csv("../temp/correlation.csv", header=FALSE))
yMat <- as.matrix(read.csv("../temp/varianceExplained.csv", header=FALSE))
yNames <- c(t(read.csv("../temp/yNames.csv", header=FALSE)))
plot(yMat[,1],yMat[,2], type="n", xlab="Z2", ylab="Z1")
yMat
zMat <- as.matrix(read.csv("../temp/z.csv", header=FALSE))
varExplained <- c(t(read.csv("../temp/varianceExplained.csv", header=FALSE)))
cor <-as.matrix(read.csv("../temp/correlation.csv", header=FALSE))
yProjection <- as.matrix(read.csv("../temp/yProjection.csv", header=FALSE))
yNames <- c(t(read.csv("../temp/yNames.csv", header=FALSE)))
plot(yMat[,1],yMat[,2], type="n", xlab="Z2", ylab="Z1")
zMat <- as.matrix(read.csv("../temp/z.csv", header=FALSE))
varExplained <- c(t(read.csv("../temp/varianceExplained.csv", header=FALSE)))
cor <-as.matrix(read.csv("../temp/correlation.csv", header=FALSE))
yMat <- as.matrix(read.csv("../temp/yProjection.csv", header=FALSE))
yNames <- c(t(read.csv("../temp/yNames.csv", header=FALSE)))
plot(yMat[,1],yMat[,2], type="n", xlab="Z2", ylab="Z1")
text(yMat[,1],yMat[,2], labels=yNames, col=as.numeric(as.factor(yNames)), cex=0.6)
yMat2 <- as.matrix(read.csv("../temp/testProjection2.csv", header=FALSE))
yNames2 <- c(t(read.csv("../temp/yNames2.csv", header=FALSE)))
eraLabels2 <- c(t(read.csv("../temp/eraLabels2.csv", header=FALSE)))
eraLabels3 <- c(t(read.csv("../temp/eraLabels3.csv", header=FALSE)))
plot(yMat2[,1],yMat2[,2], type="n", xlab="Z2", ylab="Z1")
text(yMat2[,1],yMat2[,2], labels=yNames2, col=as.numeric(as.factor(yNames2)), cex=0.6)
(m <- table(actualNames, yNames2))
actualNames <- eraLabels3
(m <- table(actualNames, yNames2))
total <- sum(m)
tp <- sum(diag(m))
fp <- total - tp
(percent <- tp/total)
(falsePc <- fp/total)
trainFile = "../data/egyption_skulls_train.csv"
testFile = "../data/egyption_skulls_test.csv"
train <- read.csv(trainFile, header=TRUE)
test <- read.csv(testFile, header=TRUE)
train$Period <- as.factor(eraLabels2)
test$Period <- as.factor(eraLabels3)
require(MASS)
model <- lda(Period~MB+BH+BL+NH, train)
pred <- predict(model, test)
(m <- table(test$Period, pred$class))
total <- sum(m)
tp <- sum(diag(m))
fp <- total - tp
(percent <- tp/total)
(falsePc <- fp/total)
par.old <- par(mfrow=c(1,2))
plot(yMat3[,1],yMat3[,2], type="n", xlab="Z2", ylab="Z1", main="Mandible actual class")
yMat3 <- as.matrix(read.csv("../temp/testProjection3.csv", header=FALSE))
yNames3 <- c(t(read.csv("../temp/yNames3.csv", header=FALSE)))
actualNames3 <- c(t(read.csv("../temp/groupNumTest.csv", header=FALSE)))
par.old <- par(mfrow=c(1,2))
plot(yMat3[,1],yMat3[,2], type="n", xlab="Z2", ylab="Z1", main="Mandible actual class")
text(yMat3[,1],yMat3[,2], labels=actualNames3, col=as.numeric(as.factor(actualNames3)), cex=0.6)
plot(yMat3[,1],yMat3[,2], type="n", xlab="Z2", ylab="Z1", main="Mandible predicted class")
text(yMat3[,1],yMat3[,2], labels=yNames3, col=as.numeric(as.factor(yNames3)), cex=0.6)
par(par.old)
(m <- table(actualNames3, yNames3))
total <- sum(m)
tp <- sum(diag(m))
fp <- total - tp
(percent <- tp/total)
(falsePc <- fp/total)
(m <- table(actualNames, yNames2))
total <- sum(m)
tp <- sum(diag(m))
fp <- total - tp
(percent <- tp/total)
(falsePc <- fp/total)
plot(yMat2[,1],yMat2[,2], type="n", xlab="Z2", ylab="Z1")
text(yMat2[,1],yMat2[,2], labels=yNames2, col=as.numeric(as.factor(yNames2)), cex=0.6)
(m <- table(actualNames, yNames2))
total <- sum(m)
tp <- sum(diag(m))
fp <- total - tp
(percent <- tp/total)
(falsePc <- fp/total)
(m <- table(actualNames3, yNames2))
(m <- table(actualNames, yNames2))
total <- sum(m)
tp <- sum(diag(m))
fp <- total - tp
(percent <- tp/total)
(falsePc <- fp/total)
yNames2
actualNames
test
names(test)
actualNames <- test$Period
(m <- table(actualNames, yNames2))
total <- sum(m)
tp <- sum(diag(m))
fp <- total - tp
(percent <- tp/total)
(falsePc <- fp/total)
yMat2 <- as.matrix(read.csv("../temp/testProjection4.csv", header=FALSE))
yNames2 <- c(t(read.csv("../temp/yNames4.csv", header=FALSE)))
yMat4 <- as.matrix(read.csv("../temp/testProjection4.csv", header=FALSE))
yNames4 <- c(t(read.csv("../temp/yNames4.csv", header=FALSE)))
plot(yMat4[,1],yMat4[,2], type="n", xlab="Z2", ylab="Z1")
text(yMat4[,1],yMat4[,2], labels=yNames4, col=as.numeric(as.factor(yNames4)), cex=0.6)
(m <- table(actualNames, yNames4))
total <- sum(m)
tp <- sum(diag(m))
fp <- total - tp
(percent <- tp/total)
(falsePc <- fp/total)
groupNumTest
require(MVN)
require(MVN)
mardiaTest(data, qqplot=TRUE)
data
data1
data1 <- read.csv("../data/iris_virginica.csv", header=TRUE)
data <- (data1[,1:4])
mu <- colMeans(data)
sigma <- cov(data)
dist <- mahalanobis(data, mu, sigma)
df <- ncol(data)
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,df)
distsorted <- sort(dist)
plot(distsorted,p,
col="blue",
main="QQ Plot of mahalnobis distance v chisq quantiles")
abline(0,1, col="red")
require(MVN)
mardiaTest(data, qqplot=TRUE)
mardiaTest(data, qqplot=TRUE)
require(MVN)
mvn(data, test="mardia", qqplot=TRUE)
require(MVN)
mvn(data, mvnTest="mardia", qqplot=TRUE)
require(MVN)
mvn(data, mvnTest="mardia", univariatePlot="qq")
mvn(data, mvnTest="mardia", univariatePlot="qq")
plot(mvn(data, mvnTest="mardia", univariatePlot="qq"))
require(MVN)
mvn(data, mvnTest="mardia", multivariatePlot="qq")
mvn(data, mvnTest="mardia", multivariatePlot="qq")
library(rscala)
library(knitr)
cp <- getwd()
includes <- list.files(file.path(cp, "../target/scala-2.12"), full.names=TRUE)
# ... args passed to rscala::scala functions. See ?rscala::scala for more informations.
make_scala_engine <- function(...) {
engine <- scala(serialize.output = TRUE, stdout = "", JARs=includes)
engine <- force(engine)
function(options) {
code <- paste(options$code, collapse = "\n")
output <- capture.output(invisible(engine + code))
engine_output(options, options$code, output)
}
}
# Register new engine in knitr
knit_engines$set(scala = make_scala_engine())
losses <- read.csv("../temp/net01_train.csv")
head(losses)
str(losses)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
plot(1:nrow(losses), losses[,1], col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1}, losses[,2])
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 10,maxL + 10), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend()
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"))
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"))
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pty=2)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=2)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=1)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=5)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=6)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=3)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=4)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=5)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=7)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=8)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=9)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=10)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=11)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=12)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=13)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=1)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=1, lwd=2)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=1, lwd=2)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 0.5,maxL + 0.5), col="blue", xlab="epoch", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=1, lwd=2)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 0.5,maxL + 0.5), col="blue", xlab="epoch", ylab="train loss", type='l')
lines(1:nrow(losses), losses[,2], col="red")
#points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=1, lwd=2)
targetSim1 <- read.csv("../temp/net01_predict.csv")
colnames(targetSim1) <- c("obs", "sim")
plot(1:nrow(targetSim1), targetSim1$obs, col="blue", xlab="n", ylab="obs", type="b")
lines(1:nrow(targetSim1), targetSim1$sim, col="red")
points(1:nrow(targetSim1), targetSim1$sim, col="red")
legend("topright", col=c("blue", "red"), legend=c("observed", "simulated"), pch=1, lwd=2)
targetSim1 <- read.csv("../temp/net01_predict.csv")
colnames(targetSim1) <- c("obs", "sim")
plot(1:nrow(targetSim1), targetSim1$obs, col="blue", xlab="n", ylab="obs", type="b")
lines(1:nrow(targetSim1), targetSim1$sim, col="red")
points(1:nrow(targetSim1), targetSim1$sim, col="red")
legend("topright", col=c("blue", "red"), legend=c("observed", "simulated"), pch=1, lwd=2)
resid <- targetSim1$obs - targetSim1$sim
plot(resid)
resid <- targetSim1$obs - targetSim1$sim
par.old <- par(mfrow=c(2,1))
plot(resid)
hist(resid)
par(par.old)
resid <- targetSim1$obs - targetSim1$sim
par.old <- par(mfrow=c(2,1))
plot(resid)
hist(resid)
par(par.old)
resid <- targetSim1$obs - targetSim1$sim
par.old <- par(mfrow=c(2,1))
plot(resid)
hist(resid)
par(par.old)
resid <- targetSim1$obs - targetSim1$sim
par.old <- par(mfrow=c(3,1))
plot(resid)
hist(resid)
qqplot(resid)
resid
length(resid)
qqplot(resid)
qqnorm(resid)
qqline(resid)
resid <- targetSim1$obs - targetSim1$sim
par.old <- par(mfrow=c(3,1))
plot(resid)
hist(resid)
qqnorm(resid, col="blue", main="Q-Q Plot for residuals")
qqline(resid, col="red")
par(par.old)
resid <- targetSim1$obs - targetSim1$sim
par.old <- par(mfrow=c(3,1))
plot(resid)
hist(resid)
qqnorm(resid, col="blue", main="Q-Q Plot for residuals")
qqline(resid, col="red")
par(par.old)
resid <- targetSim1$obs - targetSim1$sim
par.old <- par(mfrow=c(3,1))
plot(resid)
hist(resid)
qqnorm(resid, col="blue", main="Q-Q Plot for residuals")
qqline(resid, col="red")
par(par.old)
targetSim1 <- read.csv("../temp/net01_predict.csv")
colnames(targetSim1) <- c("obs", "sim")
plot(1:nrow(targetSim1), targetSim1$obs, col="blue", xlab="n", ylab="obs", type="b", main="Regression miles per gallon via Neural net")
lines(1:nrow(targetSim1), targetSim1$sim, col="red")
points(1:nrow(targetSim1), targetSim1$sim, col="red")
legend("topright", col=c("blue", "red"), legend=c("observed", "simulated"), pch=1, lwd=2)
resid2 <- targetSim2$obs - targetSim2$sim
targetSim2 <- read.csv("../temp/net01_predict2.csv")
colnames(targetSim2) <- c("obs", "sim")
plot(1:nrow(targetSim2), targetSim2$obs, col="blue", xlab="n", ylab="obs", type="b", main="Regression miles per gallon via OLS")
lines(1:nrow(targetSim2), targetSim2$sim, col="red")
points(1:nrow(targetSim2), targetSim2$sim, col="red")
legend("topright", col=c("blue", "red"), legend=c("observed", "simulated"), pch=1, lwd=2)
resid2 <- targetSim2$obs - targetSim2$sim
par.old <- par(mfrow=c(3,1))
plot(targetSim2$sim ~ targetSim2$obs, "Simulated vs Observed")
resid2 <- targetSim2$obs - targetSim2$sim
par.old <- par(mfrow=c(3,1))
plot(targetSim2$sim ~ targetSim2$obs, "Simulated vs Observed")
resid2 <- targetSim2$obs - targetSim2$sim
par.old <- par(mfrow=c(3,1))
plot(targetSim2$sim ~ targetSim2$obs, main="Simulated vs Observed")
hist(resid2)
qqnorm(resid2, col="blue", main="Q-Q Plot for residuals of OLS")
qqline(resid2, col="red")
par(par.old)
resid2 <- targetSim2$obs - targetSim2$sim
par.old <- par(mfrow=c(3,1))
plot(targetSim2$sim ~ targetSim2$obs, main="Simulated vs Observed", ylab="Simulated", xlab="Observed")
hist(resid2)
qqnorm(resid2, col="blue", main="Q-Q Plot for residuals of OLS")
qqline(resid2, col="red")
par(par.old)
resid2 <- targetSim2$obs - targetSim2$sim
par.old <- par(mfrow=c(3,1))
plot(targetSim2$sim ~ targetSim2$obs, main="Simulated vs Observed", ylab="Simulated", xlab="Observed")
m1 <- lm(targetSim2$sim ~ targetSim2$obs)
hist(resid2)
qqnorm(resid2, col="blue", main="Q-Q Plot for residuals of OLS")
qqline(resid2, col="red")
par(par.old)
m1
m1$coefficients[1]
m1$coefficients[2]
resid2 <- targetSim2$obs - targetSim2$sim
par.old <- par(mfrow=c(3,1))
plot(targetSim2$sim ~ targetSim2$obs, main="Simulated vs Observed", ylab="Simulated", xlab="Observed")
m1 <- lm(targetSim2$sim ~ targetSim2$obs)
abline(m1$coefficients[1], m1$coefficients[2], col="red")
hist(resid2)
qqnorm(resid2, col="blue", main="Q-Q Plot for residuals of OLS")
qqline(resid2, col="red")
par(par.old)
targetSim1 <- read.csv("../temp/net01_predict.csv")
colnames(targetSim1) <- c("obs", "sim")
plot(1:nrow(targetSim1), targetSim1$obs, col="blue", xlab="n", ylab="obs", type="b", main="Regression miles per gallon via Neural net")
lines(1:nrow(targetSim1), targetSim1$sim, col="red")
points(1:nrow(targetSim1), targetSim1$sim, col="red")
legend("topright", col=c("blue", "red"), legend=c("observed", "simulated"), pch=1, lwd=2)
resid <- targetSim1$obs - targetSim1$sim
par.old <- par(mfrow=c(3,1))
plot(targetSim1$sim ~ targetSim1$obs, main="Simulated vs Observed OLS model", ylab="Simulated", xlab="Observed")
m1 <- lm(targetSim1$sim ~ targetSim1$obs)
abline(m1$coefficients[1], m1$coefficients[2], col="red")
hist(resid)
qqnorm(resid, col="blue", main="Q-Q Plot for residuals")
qqline(resid, col="red")
par(par.old)
m1
