points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pty=2)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=2)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=1)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=5)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=6)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=3)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=4)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=5)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=7)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=8)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=9)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=10)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=11)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=12)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=13)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=1)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=1, lwd=2)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 1,maxL + 1), col="blue", xlab="epochs", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=1, lwd=2)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 0.5,maxL + 0.5), col="blue", xlab="epoch", ylab="train loss", type='b')
lines(1:nrow(losses), losses[,2], col="red")
points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=1, lwd=2)
losses <- read.csv("../temp/net01_train.csv")
colnames(losses) <- c("train_loss", "val_loss")
minL <- min(losses[,1], losses[,2])
maxL <- max(losses[,1], losses[,2])
plot(1:nrow(losses), losses[,1], ylim=c(minL - 0.5,maxL + 0.5), col="blue", xlab="epoch", ylab="train loss", type='l')
lines(1:nrow(losses), losses[,2], col="red")
#points(1:nrow(losses), losses[,2], col="red")
legend("topright", col=c("blue", "red"), legend=c("train loss", "val loss"), pch=1, lwd=2)
targetSim1 <- read.csv("../temp/net01_predict.csv")
colnames(targetSim1) <- c("obs", "sim")
plot(1:nrow(targetSim1), targetSim1$obs, col="blue", xlab="n", ylab="obs", type="b")
lines(1:nrow(targetSim1), targetSim1$sim, col="red")
points(1:nrow(targetSim1), targetSim1$sim, col="red")
legend("topright", col=c("blue", "red"), legend=c("observed", "simulated"), pch=1, lwd=2)
targetSim1 <- read.csv("../temp/net01_predict.csv")
colnames(targetSim1) <- c("obs", "sim")
plot(1:nrow(targetSim1), targetSim1$obs, col="blue", xlab="n", ylab="obs", type="b")
lines(1:nrow(targetSim1), targetSim1$sim, col="red")
points(1:nrow(targetSim1), targetSim1$sim, col="red")
legend("topright", col=c("blue", "red"), legend=c("observed", "simulated"), pch=1, lwd=2)
resid <- targetSim1$obs - targetSim1$sim
plot(resid)
resid <- targetSim1$obs - targetSim1$sim
par.old <- par(mfrow=c(2,1))
plot(resid)
hist(resid)
par(par.old)
resid <- targetSim1$obs - targetSim1$sim
par.old <- par(mfrow=c(2,1))
plot(resid)
hist(resid)
par(par.old)
resid <- targetSim1$obs - targetSim1$sim
par.old <- par(mfrow=c(2,1))
plot(resid)
hist(resid)
par(par.old)
resid <- targetSim1$obs - targetSim1$sim
par.old <- par(mfrow=c(3,1))
plot(resid)
hist(resid)
qqplot(resid)
resid
length(resid)
qqplot(resid)
qqnorm(resid)
qqline(resid)
resid <- targetSim1$obs - targetSim1$sim
par.old <- par(mfrow=c(3,1))
plot(resid)
hist(resid)
qqnorm(resid, col="blue", main="Q-Q Plot for residuals")
qqline(resid, col="red")
par(par.old)
resid <- targetSim1$obs - targetSim1$sim
par.old <- par(mfrow=c(3,1))
plot(resid)
hist(resid)
qqnorm(resid, col="blue", main="Q-Q Plot for residuals")
qqline(resid, col="red")
par(par.old)
resid <- targetSim1$obs - targetSim1$sim
par.old <- par(mfrow=c(3,1))
plot(resid)
hist(resid)
qqnorm(resid, col="blue", main="Q-Q Plot for residuals")
qqline(resid, col="red")
par(par.old)
targetSim1 <- read.csv("../temp/net01_predict.csv")
colnames(targetSim1) <- c("obs", "sim")
plot(1:nrow(targetSim1), targetSim1$obs, col="blue", xlab="n", ylab="obs", type="b", main="Regression miles per gallon via Neural net")
lines(1:nrow(targetSim1), targetSim1$sim, col="red")
points(1:nrow(targetSim1), targetSim1$sim, col="red")
legend("topright", col=c("blue", "red"), legend=c("observed", "simulated"), pch=1, lwd=2)
resid2 <- targetSim2$obs - targetSim2$sim
targetSim2 <- read.csv("../temp/net01_predict2.csv")
colnames(targetSim2) <- c("obs", "sim")
plot(1:nrow(targetSim2), targetSim2$obs, col="blue", xlab="n", ylab="obs", type="b", main="Regression miles per gallon via OLS")
lines(1:nrow(targetSim2), targetSim2$sim, col="red")
points(1:nrow(targetSim2), targetSim2$sim, col="red")
legend("topright", col=c("blue", "red"), legend=c("observed", "simulated"), pch=1, lwd=2)
resid2 <- targetSim2$obs - targetSim2$sim
par.old <- par(mfrow=c(3,1))
plot(targetSim2$sim ~ targetSim2$obs, "Simulated vs Observed")
resid2 <- targetSim2$obs - targetSim2$sim
par.old <- par(mfrow=c(3,1))
plot(targetSim2$sim ~ targetSim2$obs, "Simulated vs Observed")
resid2 <- targetSim2$obs - targetSim2$sim
par.old <- par(mfrow=c(3,1))
plot(targetSim2$sim ~ targetSim2$obs, main="Simulated vs Observed")
hist(resid2)
qqnorm(resid2, col="blue", main="Q-Q Plot for residuals of OLS")
qqline(resid2, col="red")
par(par.old)
resid2 <- targetSim2$obs - targetSim2$sim
par.old <- par(mfrow=c(3,1))
plot(targetSim2$sim ~ targetSim2$obs, main="Simulated vs Observed", ylab="Simulated", xlab="Observed")
hist(resid2)
qqnorm(resid2, col="blue", main="Q-Q Plot for residuals of OLS")
qqline(resid2, col="red")
par(par.old)
resid2 <- targetSim2$obs - targetSim2$sim
par.old <- par(mfrow=c(3,1))
plot(targetSim2$sim ~ targetSim2$obs, main="Simulated vs Observed", ylab="Simulated", xlab="Observed")
m1 <- lm(targetSim2$sim ~ targetSim2$obs)
hist(resid2)
qqnorm(resid2, col="blue", main="Q-Q Plot for residuals of OLS")
qqline(resid2, col="red")
par(par.old)
m1
m1$coefficients[1]
m1$coefficients[2]
resid2 <- targetSim2$obs - targetSim2$sim
par.old <- par(mfrow=c(3,1))
plot(targetSim2$sim ~ targetSim2$obs, main="Simulated vs Observed", ylab="Simulated", xlab="Observed")
m1 <- lm(targetSim2$sim ~ targetSim2$obs)
abline(m1$coefficients[1], m1$coefficients[2], col="red")
hist(resid2)
qqnorm(resid2, col="blue", main="Q-Q Plot for residuals of OLS")
qqline(resid2, col="red")
par(par.old)
targetSim1 <- read.csv("../temp/net01_predict.csv")
colnames(targetSim1) <- c("obs", "sim")
plot(1:nrow(targetSim1), targetSim1$obs, col="blue", xlab="n", ylab="obs", type="b", main="Regression miles per gallon via Neural net")
lines(1:nrow(targetSim1), targetSim1$sim, col="red")
points(1:nrow(targetSim1), targetSim1$sim, col="red")
legend("topright", col=c("blue", "red"), legend=c("observed", "simulated"), pch=1, lwd=2)
resid <- targetSim1$obs - targetSim1$sim
par.old <- par(mfrow=c(3,1))
plot(targetSim1$sim ~ targetSim1$obs, main="Simulated vs Observed OLS model", ylab="Simulated", xlab="Observed")
m1 <- lm(targetSim1$sim ~ targetSim1$obs)
abline(m1$coefficients[1], m1$coefficients[2], col="red")
hist(resid)
qqnorm(resid, col="blue", main="Q-Q Plot for residuals")
qqline(resid, col="red")
par(par.old)
m1
sigmoid <- function(y) 1.0 / (1+exp(-y))
y <- sigmoid(1:10)
plot(x ~ y)
sigmoid <- function(y) 1.0 / (1+exp(-y))
x <- 1:10
y <- sigmoid(x)
plot(x ~ y)
sigmoid <- function(y) 1.0 / (1+exp(-y))
x <- -1:0.1:1
y <- sigmoid(x)
plot(x ~ y)
sigmoid <- function(y) 1.0 / (1+exp(-y))
x <- -1:0.001:1
y <- sigmoid(x)
plot(x ~ y)
sigmoid <- function(y) 1.0 / (1+exp(-y))
x <- seq(from=-1, to=1, by=0.01)
y <- sigmoid(x)
plot(x ~ y)
sigmoid <- function(y) 1.0 / (1+exp(-y))
x <- seq(from=-1, to=1, by=0.001)
y <- sigmoid(x)
plot(x ~ y)
sigmoid <- function(y) 1.0 / (1+exp(-y))
x <- seq(from=-1, to=1, by=0.1)
y <- sigmoid(x)
plot(x ~ y)
sigmoid <- function(y) 1.0 / (1+exp(-y))
x <- seq(from=0, to=1, by=0.1)
y <- sigmoid(x)
plot(x ~ y)
sigmoid <- function(y) 1.0 / (1+exp(-y))
x <- seq(from=0, to=1, by=0.01)
y <- sigmoid(x)
plot(x ~ y)
sigmoid <- function(y) 1.0 / (1+exp(-y))
x <- seq(from=0, to=10, by=0.01)
y <- sigmoid(x)
plot(x ~ y)
sigmoid <- function(y) 1.0 / (1+exp(-y))
x <- seq(from=0, to=10, by=0.01)
y <- sigmoid(x)
plot(x ~ y)
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
x <- seq(from=0, to=1, by=0.01)
y <- sigmoid(x)
plot(x ~ y)
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
x <- seq(from=0, to=1, by=0.01, type="l")
y <- sigmoid(x)
plot(x ~ y)
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
x <- seq(from=0, to=1, by=0.01, type="l")
y <- sigmoid(x)
plot(y ~ x)
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
x <- seq(from=0, to=1, by=0.01)
y <- sigmoid(x)
plot(y ~ x, type="l")
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
x <- rnorm(10) #seq(from=0, to=1, by=0.01)
y <- sigmoid(x)
plot(y ~ x, type="l")
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
x <- seq(from=0, to=1, by=0.01)
y <- sigmoid(x)
plot(y ~ x, type="l", col="red")
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
x <- seq(from=0, to=1, by=0.01)
y <- sigmoid(x)
plot(x, y, type="l", col="red")
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
x <- seq(from=1, to=10)#, by=0.01)
y <- sigmoid(x)
plot(x, y, type="l", col="red")
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
x <- seq(from=-10, to=10)#, by=0.01)
y <- sigmoid(x)
plot(x, y, type="l", col="red")
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
x <- seq(from=-1, to=1)#, by=0.01)
y <- sigmoid(x)
plot(x, y, type="l", col="red")
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
x <- seq(from=-5, to=5)#, by=0.01)
y <- sigmoid(x)
plot(x, y, type="l", col="red")
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
sigmoid_d <- function(y) sigmoid(y)*(1-sigmoid(y))
x <- seq(from=-5, to=5)
y <- sigmoid(x)
y2 <- sigmoid_d(x)
par.old <- par(mfrow=c(1,2))
plot(x, y, type="l", col="red")
plot(x,y2, type="l", col="red")
par(par.old)
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
sigmoid_d <- function(y) sigmoid(y)*(1-sigmoid(y))
x <- seq(from=-5, to=5)
y <- sigmoid(x)
y2 <- sigmoid_d(x)
par.old <- par(mfrow=c(1,2))
plot(x, y, type="l", col="red")
plot(x,y2, type="l", col="red")
par(par.old)
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
sigmoid_d <- function(y) sigmoid(y)*(1-sigmoid(y))
x <- seq(from=-5, to=5)
y <- sigmoid(x)
y2 <- sigmoid_d(x)
par.old <- par(mfrow=c(1,2))
plot(x, y, type="l", col="red", main="phi")
plot(x,y2, type="l", col="red")
par(par.old)
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
sigmoid_d <- function(y) sigmoid(y)*(1-sigmoid(y))
x <- seq(from=-5, to=5)
y <- sigmoid(x)
y2 <- sigmoid_d(x)
par.old <- par(mfrow=c(1,2))
plot(x, y, type="l", col="red", main="sigmoid")
plot(x,y2, type="l", col="red", main="derivative of sigmoid")
par(par.old)
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
sigmoid_d <- function(y) sigmoid(y)*(1-sigmoid(y))
x <- seq(from=-5, to=5)
y <- sigmoid(x)
y2 <- sigmoid_d(x)
par.old <- par(mfrow=c(1,2))
plot(x, y, type="l", col="red", main="sigmoid")
plot(x,y2, type="l", col="red", ylab="y", main="derivative of sigmoid")
par(par.old)
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
sigmoid_d <- function(y) sigmoid(y)*(1-sigmoid(y))
x <- seq(from=-5, to=5)
y <- sigmoid(x)
y2 <- sigmoid_d(x)
par.old <- par(mfrow=c(1,2))
plot(x, y, type="l", col="red", main="sigmoid")
plot(x,y2, type="l", col="red", ylab="y", main="derivative of sigmoid")
par(par.old)
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
sigmoid_d <- function(y) sigmoid(y)*(1-sigmoid(y))
x <- seq(from=-5, to=5)
y <- sigmoid(x)
y2 <- sigmoid_d(x)
par.old <- par(mfrow=c(1,2))
plot(x, y, type="l", col="red", main="sigmoid")
plot(x,y2, type="l", col="red", ylab="y", main="derivative of sigmoid")
par(par.old)
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
sigmoid_d <- function(y) sigmoid(y)*(1-sigmoid(y))
x <- seq(from=-5, to=5)
y <- sigmoid(x)
y2 <- sigmoid_d(x)
par.old <- par(mfrow=c(1,2))
plot(x, y, type="l", col="red", main="sigmoid")
plot(x,y2, type="l", col="red", ylab="y", main="derivative of sigmoid")
par(par.old)
tanh_d <- function(x) 1.0 - tanh(x)*tanh(x)
x <- seq(from=-5, to=5)
y <- tanh(x)
y2 <- tanh_d(x)
par.old <- par(mfrow=c(1,2))
plot(x, y, type="l", col="red", main="tanh")
plot(x,y2, type="l", col="red", ylab="y", main="derivative of tanh")
par(par.old)
relu <- function(x) if (x > 0) x else 0.0
relu_d <- function(x) if (x > 0) 1.0 else 0.0
x <- seq(from=-5, to=5)
y <- relu(x)
y2 <- relu_d(x)
par.old <- par(mfrow=c(1,2))
plot(x, y, type="l", col="red", main="relu")
y
relu <- function(x) sapply(x, function(x) if (x > 0) x else 0.0)
relu_d <- function(x) sapply(x, function(x) if (x > 0) 1.0 else 0.0)
x <- seq(from=-5, to=5)
y <- relu(x)
y2 <- relu_d(x)
par.old <- par(mfrow=c(1,2))
plot(x, y, type="l", col="red", main="relu")
plot(x,y2, type="l", col="red", ylab="y", main="derivative of relu")
par(par.old)
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
sigmoid_d <- function(y) sigmoid(y)*(1-sigmoid(y))
x <- seq(from=-5, to=5)
x <- (x - min(x))/(max(x) - min(x))
y <- sigmoid(x)
y2 <- sigmoid_d(x)
par.old <- par(mfrow=c(1,2))
plot(x, y, type="l", col="red", main="sigmoid")
plot(x,y2, type="l", col="red", ylab="y", main="derivative of sigmoid")
par(par.old)
relu <- function(x) sapply(x, function(x) if (x > 0) x else 0.0)
relu_d <- function(x) sapply(x, function(x) if (x > 0) 1.0 else 0.0)
x <- seq(from=-5, to=5)
x <- (x - min(x))/(max(x) - min(x))
y <- relu(x)
y2 <- relu_d(x)
par.old <- par(mfrow=c(1,2))
plot(x, y, type="l", col="red", main="relu")
plot(x,y2, type="l", col="red", ylab="y", main="derivative of relu")
par(par.old)
relu <- function(x) sapply(x, function(x) if (x > 0) x else 0.0)
relu_d <- function(x) sapply(x, function(x) if (x > 0) 1.0 else 0.0)
x <- seq(from=-5, to=5)
#x <- (x - min(x))/(max(x) - min(x))
y <- relu(x)
y2 <- relu_d(x)
par.old <- par(mfrow=c(1,2))
plot(x, y, type="l", col="red", main="relu")
plot(x,y2, type="l", col="red", ylab="y", main="derivative of relu")
par(par.old)
sigmoid <- function(y) 1.0 / (1.0+exp(-y))
sigmoid_d <- function(y) sigmoid(y)*(1-sigmoid(y))
x <- seq(from=-5, to=5)
y <- sigmoid(x)
y2 <- sigmoid_d(x)
par.old <- par(mfrow=c(1,2))
plot(x, y, type="l", col="red", main="sigmoid")
plot(x,y2, type="l", col="red", ylab="y", main="derivative of sigmoid")
par(par.old)
crossentropy <- function(a, b) -1.0 * sum(a * log(b))
a <- rnorm(1:10)
crossentropy(a,a)
crossentropy <- function(a, b) -1.0 * sum(a * log(b))
a <- pnorm(rnorm(1:10))
crossentropy(a,a)
