total/n1
d1 <- c(2.06133180060984, 0.898926649890006, 1.8675976088232014, -0.8446810761897462, 1.0926608416766443, -0.45721269261646774, 0.705192458103366, -2.0070862269095797, 1.2863950334632828, -1.4258836515496631, -1.8133520351229415, -0.06974430904318926, 0.1239898827434491, 0.3177240745300875, -0.6509468844031078, 1.480129225249923, -0.6509468844031078, -0.2634785008298294, 0.5114582663167275, -0.6509468844031078, -0.06974430904318926, 0.3177240745300875, 0.705192458103366, 0.3177240745300875, 0.898926649890006, 1.2863950334632828, 1.6738634170365612, 1.480129225249923, 0.1239898827434491, -0.45721269261646774, -0.8446810761897462, -0.8446810761897462, -0.2634785008298294, 0.1239898827434491, -1.0384152679763845, 0.1239898827434491, 1.480129225249923, 0.705192458103366, -0.6509468844031078, -0.8446810761897462, -0.8446810761897462, 0.3177240745300875, -0.2634785008298294, -1.8133520351229415, -0.6509468844031078, -0.45721269261646774, -0.45721269261646774, 0.5114582663167275, -1.619617843336303, -0.45721269261646774)
mean(d1)
sum(d1)
n1 <- length(d1)
total <- 0
for(i in 1:length(d1)) {
total <- total + d1[i]
}
total
total/n1
debugSource('~/Projects/scala/scala-au.id.cxd.math-gh-pages/scala-au.id.cxd.math/notes/debug.R', echo=TRUE)
sum(d1)
debugSource('~/Projects/scala/scala-au.id.cxd.math-gh-pages/scala-au.id.cxd.math/notes/debug.R', echo=TRUE)
debugSource('~/Projects/scala/scala-au.id.cxd.math-gh-pages/scala-au.id.cxd.math/notes/debug.R', echo=TRUE)
# why is sum different to total?
sum(d1)
d1 <- c(2.06133180060984, 0.898926649890006, 1.8675976088232014, -0.8446810761897462, 1.0926608416766443, -0.45721269261646774, 0.705192458103366, -2.0070862269095797, 1.2863950334632828, -1.4258836515496631, -1.8133520351229415, -0.06974430904318926, 0.1239898827434491, 0.3177240745300875, -0.6509468844031078, 1.480129225249923, -0.6509468844031078, -0.2634785008298294, 0.5114582663167275, -0.6509468844031078, -0.06974430904318926, 0.3177240745300875, 0.705192458103366, 0.3177240745300875, 0.898926649890006, 1.2863950334632828, 1.6738634170365612, 1.480129225249923, 0.1239898827434491, -0.45721269261646774, -0.8446810761897462, -0.8446810761897462, -0.2634785008298294, 0.1239898827434491, -1.0384152679763845, 0.1239898827434491, 1.480129225249923, 0.705192458103366, -0.6509468844031078, -0.8446810761897462, -0.8446810761897462, 0.3177240745300875, -0.2634785008298294, -1.8133520351229415, -0.6509468844031078, -0.45721269261646774, -0.45721269261646774, 0.5114582663167275, -1.619617843336303, -0.45721269261646774)
mean(d1)
sum(d1)
n1 <- length(d1)
total <- 0
for(i in 1:length(d1)) {
total <- total + d1[i]
}
total
# why is sum different to total?
sum(d1)
d1 <- c(2.06133180060984, 0.898926649890006, 1.8675976088232014, -0.8446810761897462, 1.0926608416766443, -0.45721269261646774, 0.705192458103366, -2.0070862269095797, 1.2863950334632828, -1.4258836515496631, -1.8133520351229415, -0.06974430904318926, 0.1239898827434491, 0.3177240745300875, -0.6509468844031078, 1.480129225249923, -0.6509468844031078, -0.2634785008298294, 0.5114582663167275, -0.6509468844031078, -0.06974430904318926, 0.3177240745300875, 0.705192458103366, 0.3177240745300875, 0.898926649890006, 1.2863950334632828, 1.6738634170365612, 1.480129225249923, 0.1239898827434491, -0.45721269261646774, -0.8446810761897462, -0.8446810761897462, -0.2634785008298294, 0.1239898827434491, -1.0384152679763845, 0.1239898827434491, 1.480129225249923, 0.705192458103366, -0.6509468844031078, -0.8446810761897462, -0.8446810761897462, 0.3177240745300875, -0.2634785008298294, -1.8133520351229415, -0.6509468844031078, -0.45721269261646774, -0.45721269261646774, 0.5114582663167275, -1.619617843336303, -0.45721269261646774)
mean(d1)
sum(d1)
n1 <- length(d1)
total <- 0
for(i in 1:length(d1)) {
total <- total + d1[i]
}
total
total/n1
length(d1)
1:length(d1)
debug(sum(d1))
debug(sum)
sum(d1)
sum(d1[1])
sum(d1[1:2])
d1[1]+d1[2]
sum(d1[1:10])
total <- 0
for (i in 1:10) total <- total + d1[i]
total
total <- 0
for (i in 1:20) total <- total + d1[i]
total
sum(d1[1:20])
total <- 0
sum(d1[1:30])
for (i in 1:30) total <- total + d1[i]
total
total <- 0
for (i in 1:40) total <- total + d1[i]
total
sum(d1[1:40])
total <- 0
for (i in 1:45) total <- total + d1[i]
total
sum(d1[1:45])
total <- 0
sum(d1[1:49])
for (i in 1:49) total <- total + d1[i]
total
total <- 0
for (i in 1:50) total <- total + d1[i]
total
sum(d1[1:50])
d1[50]
data1 <- read.csv("../data/iris_virginica.csv", header=TRUE)
data <- (data1[,1:4])
mu <- colSums(data)/length(data)
sigma <- cov(data)
dist <- mahalanobis(data, mu, sigma)
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
distsorted <- sort(dist)
plot(distsorted,p)
abline(0,1)
require(MVN)
mardiaTest(data, qqplot=TRUE)
data1 <- read.csv("../data/iris_virginica.csv", header=TRUE)
data <- (data1[,1:4])
mu <- colSums(data)/length(data)
sigma <- cov(data)
dist <- mahalanobis(data, mu, sigma)
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
distsorted <- sort(dist)
plot(distsorted,p)
abline(0,max(p))
require(MVN)
mardiaTest(data, qqplot=TRUE)
data1 <- read.csv("../data/iris_virginica.csv", header=TRUE)
data <- (data1[,1:4])
mu <- colSums(data)/length(data)
sigma <- cov(data)
dist <- mahalanobis(data, mu, sigma)
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
distsorted <- sort(dist)
plot(distsorted,p)
abline()
require(MVN)
mardiaTest(data, qqplot=TRUE)
data1 <- read.csv("../data/iris_virginica.csv", header=TRUE)
data <- (data1[,1:4])
mu <- colSums(data)/length(data)
sigma <- cov(data)
dist <- mahalanobis(data, mu, sigma)
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
distsorted <- sort(dist)
plot(distsorted,p)
abline(coef=c(0,0.15))
require(MVN)
mardiaTest(data, qqplot=TRUE)
data1 <- read.csv("../data/iris_virginica.csv", header=TRUE)
data <- (data1[,1:4])
mu <- colSums(data)/length(data)
sigma <- cov(data)
dist <- mahalanobis(data, mu, sigma)
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
distsorted <- sort(dist)
plot(distsorted,p)
abline(coef=c(0,0.45))
require(MVN)
mardiaTest(data, qqplot=TRUE)
data1 <- read.csv("../data/iris_virginica.csv", header=TRUE)
data <- (data1[,1:4])
mu <- colSums(data)/length(data)
sigma <- cov(data)
dist <- mahalanobis(data, mu, sigma)
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
distsorted <- sort(dist)
plot(distsorted,p)
abline(h=0, v=max(distsorted))
require(MVN)
mardiaTest(data, qqplot=TRUE)
data1 <- read.csv("../data/iris_virginica.csv", header=TRUE)
data <- (data1[,1:4])
mu <- colSums(data)/length(data)
sigma <- cov(data)
dist <- mahalanobis(data, mu, sigma)
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
distsorted <- sort(dist)
plot(distsorted,p)
abline(h=p, v=distsorted)
require(MVN)
mardiaTest(data, qqplot=TRUE)
data1 <- read.csv("../data/iris_virginica.csv", header=TRUE)
data <- (data1[,1:4])
mu <- colSums(data)/length(data)
sigma <- cov(data)
dist <- mahalanobis(data, mu, sigma)
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
distsorted <- sort(dist)
plot(distsorted,p)
abline(0,1)
require(MVN)
mardiaTest(data, qqplot=TRUE)
data1 <- read.csv("../data/iris_virginica.csv", header=TRUE)
data <- (data1[,1:4])
mu <- colMeans(data)
sigma <- cov(data)
dist <- mahalanobis(data, mu, sigma)
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
distsorted <- sort(dist)
plot(distsorted,p)
abline(0,1)
require(MVN)
mardiaTest(data, qqplot=TRUE)
data1 <- read.csv("../data/iris_virginica.csv", header=TRUE)
data <- (data1[,1:4])
mu <- colMeans(data)
sigma <- cov(data)
dist <- mahalanobis(data, mu, sigma)
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
distsorted <- sort(dist)
lower <- c(min(distsorted),min(p))
upper <- c(max(distsorted), max(p))
slope <- ((lower[1] - upper[1])^2 + (lower[2] - upper[2])^2)/2
plot(distsorted,p)
abline(0,slope)
require(MVN)
mardiaTest(data, qqplot=TRUE)
slope
1 / slope
data1 <- read.csv("../data/iris_virginica.csv", header=TRUE)
data <- (data1[,1:4])
mu <- colMeans(data)
sigma <- cov(data)
dist <- mahalanobis(data, mu, sigma)
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
distsorted <- sort(dist)
lower <- c(min(distsorted),min(p))
upper <- c(max(distsorted), max(p))
slope <-1 /  ((lower[1] - upper[1])^2 + (lower[2] - upper[2])^2)/2
plot(distsorted,p)
abline(0,slope)
require(MVN)
mardiaTest(data, qqplot=TRUE)
slope
slope <- ((lower[1] - upper[1])^2 + (lower[2] - upper[2])^2)/2
1.0/slope
data1 <- read.csv("../data/iris_virginica.csv", header=TRUE)
data <- (data1[,1:4])
mu <- colMeans(data)
sigma <- cov(data)
dist <- mahalanobis(data, mu, sigma)
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
distsorted <- sort(dist)
lower <- c(min(distsorted),min(p))
upper <- c(max(distsorted), max(p))
slope <- (lower[2] - upper[2]) / (lower[1] - upper[1])
plot(distsorted,p)
abline(0,slope)
require(MVN)
mardiaTest(data, qqplot=TRUE)
m <- lm(p ~ distored)
m <- lm(p ~ distsorted)
m
m$coefficients
slope
m <- lm(p ~ distsorted)
slope <- m$coefficients[1]
plot(distsorted,p)
abline(0,slope)
slope
slope <- m$coefficients[2]
plot(distsorted,p)
abline(0,slope)
m <- lm(p ~ distsorted)
intercept <- m$coefficients[1]
slope <- m$coefficients[2]
slope <- (lower[2] - upper[2]) / (lower[1] - upper[1])
plot(distsorted,p)
abline(intercept,slope)
data1 <- read.csv("../data/iris_virginica.csv", header=TRUE)
data <- (data1[,1:4])
mu <- colMeans(data)
sigma <- cov(data)
dist <- mahalanobis(data, mu, sigma)
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
distsorted <- sort(dist)
m <- lm(p ~ distsorted)
intercept <- m$coefficients[1]
slope <- m$coefficients[2]
plot(distsorted,p)
abline(intercept,slope)
require(MVN)
mardiaTest(data, qqplot=TRUE)
data1 <- read.csv("../data/iris_virginica.csv", header=TRUE)
data <- (data1[,1:4])
mu <- colMeans(data)
sigma <- cov(data)
dist <- mahalanobis(data, mu, sigma)
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
distsorted <- sort(dist)
m <- lm(p ~ distsorted)
intercept <- m$coefficients[1]
slope <- m$coefficients[2]
plot(distsorted,p)
abline(intercept,slope)
require(MVN)
mardiaTest(data, qqplot=TRUE)
data1 <- read.csv("../data/iris_virginica.csv", header=TRUE)
data <- (data1[,1:4])
mu <- colMeans(data)
sigma <- cov(data)
dist <- mahalanobis(data, mu, sigma)
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
distsorted <- sort(dist)
m <- lm(p ~ distsorted)
intercept <- m$coefficients[1]
slope <- m$coefficients[2]
plot(distsorted,p, main="QQ Plot of mahalnobis distance v chisq quantiles")
abline(intercept,slope)
require(MVN)
mardiaTest(data, qqplot=TRUE)
quantiles
p
distsorted
invS <- solve(sigma)
sweep(data, 2, function(row) row - mu)
sweep(data, 2, function(row) { row - mu })
sweep(data, 1, function(row) { row - mu })
apply(data, 2, function(row) { row - mu})
delta <- apply(data, 2, function(row) { row - mu})
invS <- solve(sigma)
delta <- apply(data, 2, function(row) { row - mu})
t(delta)%*%invS%*%delta
dim(delta)
dim(invS)
(t(delta)%*%invS)
(invS%*%delta)
(invS%*%t(delta))
delta%*%(invS%*%t(delta))
dist <- delta%*%(invS%*%t(delta))
diag(dist)
sqrt(diag(dist))
invS <- solve(sigma)
delta <- apply(data, 2, function(row) { row - mu})
dist <- delta%*%(invS%*%t(delta))
rowDist <- sqrt(diag(dist))
length(rowDist)
rowDist <- sort(sqrt(diag(dist)))
invS <- solve(sigma)
delta <- apply(data, 2, function(row) { row - mu})
dist <- delta%*%(invS%*%t(delta))
rowDist <- sort(sqrt(diag(dist)))
distsorted <- rowDist
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
distsorted <- sort(dist)
m <- lm(p ~ distsorted)
intercept <- m$coefficients[1]
slope <- m$coefficients[2]
plot(distsorted,p, main="QQ Plot of mahalnobis distance v chisq quantiles")
abline(intercept,slope)
lenfth(distSorted)
length(distSorted)
length(distsorted)
dim(dist)
dim(rowDist)
length(rowDist)
invS <- solve(sigma)
delta <- apply(data, 2, function(row) { row - mu})
dist1 <- delta%*%(invS%*%t(delta))
rowDist <- sort(sqrt(diag(dist1)))
distsorted <- rowDist
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
distsorted <- sort(dist)
m <- lm(p ~ distsorted)
intercept <- m$coefficients[1]
slope <- m$coefficients[2]
data1 <- read.csv("../data/iris_virginica.csv", header=TRUE)
data <- (data1[,1:4])
mu <- colMeans(data)
sigma <- cov(data)
dist <- mahalanobis(data, mu, sigma)
invS <- solve(sigma)
delta <- apply(data, 2, function(row) { row - mu})
dist1 <- delta%*%(invS%*%t(delta))
rowDist <- sort(sqrt(diag(dist1)))
distsorted <- rowDist
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
distsorted <- sort(dist)
m <- lm(p ~ distsorted)
intercept <- m$coefficients[1]
slope <- m$coefficients[2]
plot(distsorted,p, main="QQ Plot of mahalnobis distance v chisq quantiles")
abline(intercept,slope)
invS <- solve(sigma)
delta <- apply(data, 2, function(row) { row - mu})
dist1 <- delta%*%(invS%*%t(delta))
rowDist <- sort(sqrt(diag(dist1)))
distsorted <- rowDist
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
distsorted <- sort(dist)
m <- lm(p ~ distsorted)
intercept <- m$coefficients[1]
slope <- m$coefficients[2]
plot(distsorted,p, main="QQ Plot of mahalnobis distance v chisq quantiles")
abline(intercept,slope)
rowDist
distsorted <- rowDist
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
#distsorted <- sort(dist)
m <- lm(p ~ distsorted)
intercept <- m$coefficients[1]
slope <- m$coefficients[2]
plot(distsorted,p, main="QQ Plot of mahalnobis distance v chisq quantiles")
abline(intercept,slope)
invS <- inv(sigma)
invS <- pinv(sigma)
invS <- solve(sigma)
invS <- solve(sigma)
delta <- apply(data, 2, function(row) { (row - mu)^2 })
dist1 <- delta%*%(invS%*%t(delta))
rowDist <- sort(sqrt(diag(dist1)))
distsorted <- rowDist
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,2)
#distsorted <- sort(dist)
m <- lm(p ~ distsorted)
intercept <- m$coefficients[1]
slope <- m$coefficients[2]
plot(distsorted,p, main="QQ Plot of mahalnobis distance v chisq quantiles")
abline(intercept,slope)
sigma
sigma
rowDist
plot(density(dist, bw = 0.5),
main="Squared Mahalanobis distances, n=100, p=3") ; rug(dist)
df <- ncol(data)-1
n <- length(dist)
u <- ((1:n)-0.5)/n
p <- qchisq(u,df)
distsorted <- sort(dist)
m <- lm(p ~ distsorted)
intercept <- m$coefficients[1]
slope <- m$coefficients[2]
plot(distsorted,p, main="QQ Plot of mahalnobis distance v chisq quantiles")
abline(intercept,slope)
plot(distsorted,p, main="QQ Plot of mahalnobis distance v chisq quantiles")
abline(0,1)
dist
distsorted
p
cov(data)
mu <- colMeans(data)
delta <- apply(data, 2, function(d) d - mu)
mu <- colMeans(data)
delta <- apply(data, 2, function(d) (d - mu)^2)
delta
delta%*%t(delta)
t(delta)%*%delta
mu <- colMeans(data)
delta <- apply(data, 2, function(d) (d - mu)^2)
sigma2 <- 1/(nrow(data)-1) * t(delta)%*%delta
sigma2
mu <- colMeans(data)
delta <- apply(data, 2, function(d) (d - mu)^2)
sigma2 <- 1/(nrow(data)-1) * (t(delta)%*%delta)
sigma2
cov(data)
delta
data[,1] - mu
data[1,] - mu
head(delta)
mu <- colMeans(data)
delta <- data
for(i in 1:nrow(delta)) {
delta[i,] <- delta[i,]-mu
}
sigma2 <- 1/(nrow(data)-1) * (t(delta)%*%delta)
delta
delta <- data
for(i in 1:nrow(delta)) {
delta[i,] <- (delta[i,]-mu)^2
}
sigma2 <- 1/(nrow(data)-1) * (t(delta)%*%delta)
sigma2 <- 1/(nrow(data)-1) * (t(as.matrix(delta))%*%as.matrix(delta))
sigma
sigma2
sigma3 <- 1/(nrow(data)) * (t(as.matrix(delta))%*%as.matrix(delta))
sigma3
sigma2
for(i in 1:nrow(delta)) {
delta[i,] <- (delta[i,]-mu)
}
sigma2 <- 1/(nrow(data)-1) * (t(as.matrix(delta))%*%as.matrix(delta))
sigma2
mu <- colMeans(data)
delta <- data
for(i in 1:nrow(delta)) {
delta[i,] <- (delta[i,]-mu)
}
sigma2 <- 1/(nrow(data)-1) * (t(as.matrix(delta))%*%as.matrix(delta))
sigma2
cov(data)
qnorm(-1.0342194201915518)
qnorm(-1.03)
qnorm(-1.03,0,1)
dnorm(-1.03,0,1)
pnorm(-1.03,0,1)
dnorm(-1.03,0,1)
require(MVN)
mardiaTest(scale(data), qqplot=TRUE)
