package probability.analysis

import au.id.cxd.math.probability.analysis.AndersonDarling
import au.id.cxd.math.probability.continuous.Normal
import org.scalatest.{FlatSpec, Matchers}

class TestGoodnessOfFit extends FlatSpec with Matchers {

  /**
    * test random weibull distribution with shape=1 and scale=5
    * This is not normally distributed and shapiro.test in R returns p-value below 0.05
    * An ad.test in R also gives a p-value well below 0.05.
    */
  val weibullTest = Seq(0.064990776417656,0.210998473253566,1.60170329280426,0.567815142449451,0.283022044605126,1.00462365480047,0.278252274504686,0.198869218354005,0.0438059026040631,0.295200508805264,0.684711724022289,0.808870435541965,1.21713061618784,4.0774693220686,0.152165870672591,2.21413622607561,0.368639245540462,0.784392906145808,0.304752099324078,3.5054042082999,0.458057403954571,0.918273704452984,1.21923282537361,0.695206457845635,0.0694670817560684,0.235434055467402,0.789238661102747,0.66209312598467,0.904309814552681,0.757242612435739,0.0705611205627269,0.297451076308604,0.914572089930884,1.28830329988866,4.74109082350975,1.55969731577955,0.601482439232455,1.14603661973681,0.0712201866649113,0.770914586344631,0.0367767686282285,0.622093171857565,0.628666664057825,1.1425443098409,1.27297330349969,0.269038540391177,0.219870765370464,0.75980743943572,0.322822579211546,0.230484990557453,1.51940825698355,0.758137033721467,0.89652940763955,0.145540408546067,0.125988345076142,1.34346177172647,3.15005045746883,0.189705098694489,0.721380169393653,0.302779141960728,0.44362942351172,0.98266040762904,0.220766771407797,1.8657571892886,0.453704312718246,0.190824695053154,0.434089503994289,0.853011944171231,0.193960492305281,0.168367191399449,0.719411692323876,0.806403667794652,0.242860556303696,2.0130675077341,1.34404692542406,0.578205260934426,0.928189371649324,0.662068778284128,0.297788890114579,0.16336007363944,0.865553575631417,0.243075981729076,0.016592670067671,2.97239519950047,1.72964523074672,2.0661172911915,0.276737278861772,0.603541959426477,1.91040613601328,2.48202084211351,0.637196701308824,0.179753872000948,0.0485712658404621,0.60325419981374,1.35103037555615,0.608274309464054,0.292435651227868,0.749910659235974,0.754049050419532,3.13515535529026
  )

  /**
    * samples drawn from the standard normal distribution
    * this should test as normal.
    * In R an ad.test gives p-value above 0.05 cannot reject null hypothesis.
    * The shapiro.test gives p-value above 0.05 at approx 0.8 also cannot reject null hypothesis
    *
    */
  val normTest = Seq(0.223604784055374,-0.607756165566262,1.00104700260924,0.11997551467413,-0.341131342134574,0.205422919188907,2.03237654096315,-0.0484869305346407,-2.21416804678249,-1.08965212673373,0.848335657837099,0.113832587426467,-0.432537047571831,0.0417777037954954,-1.03991485842242,-0.764878361184006,0.835591492671475,-1.39307034301771,-0.465086574649418,0.251461066233866,0.461260465625434,2.39850646374367,-0.00547933027489897,-1.47699071061053,-0.406057516010159,0.58685158872943,-1.08979551739648,-0.232444721475509,0.682077566191555,-0.0103206042622344,-0.669573473816154,-1.75453971242783,1.19462359764897,1.54543778425322,-0.830890934325964,-2.27909520975311,-0.178686941392562,-0.945342010151874,0.496179434561481,-1.32036671018629,0.0853329370153906,-1.09284400817726,0.849068067947088,-2.2007302243817,-1.07160293585887,0.698255248654901,-0.313507633022473,-0.186828188177019,-2.30663748518586,-0.546855228602649,-0.24513832038306,0.415312044728314,1.87976675364869,1.79325625873866,0.258978458374694,0.0701366806189791,-0.252104651690041,0.206393969796161,-1.82675498160809,1.42642924526536,1.17084564920633,0.424711981791888,-1.81283334281279,-0.660696187570272,-1.43594528060502,-0.469886177516214,1.10236583925729,-0.506305524386529,0.282501372640518,0.961888996103603,0.657416333823585,0.0310174638455838,2.40072792238154,-0.104699149286272,-0.857415196363932,0.135094627540395,1.16125505228411,-1.80784193886018,-1.20857058970741,-1.53157814734946,0.867866283499649,0.685372790715094,-1.18513298152055,-0.0918625773193686,-0.187082077829308,-0.381882975585006,0.88766415485443,0.798765573500067,0.769784221805533,-0.782696978220874,-0.966073810440864,-0.63830084430075,-0.198371048118108,0.257870492557878,-0.714947790968672,0.253996905686781,-1.20046748869022,1.54697893192078,0.780517921144862,-1.27084297056212
  )


  "weibull" should "suggest evidence to reject ad.test null hypothesis" in {
    val samples = weibullTest
    val norm = Normal(mu=0.0)(1.0)
    val cdf = (x:Double) => norm.cdf(x)
    val test = AndersonDarling(samples, cdf)
    val result = test.test(0.05)
    println(result.toString)
    // should reject the null hypothesis
    result.reject should be (true)
  }

  "normtest" should "not suggest evidence to reject ad.test null hypothesis" in {
    val samples = normTest
    val norm = Normal(mu=0.0)(1.0)
    val cdf = (x:Double) => norm.cdf(x)
    val test = AndersonDarling(samples, cdf)
    val result = test.test(alpha=0.05)
    println(result.toString)
    result.reject should be(false)
  }

}
